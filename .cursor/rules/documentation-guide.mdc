# 인터랙티브 컴포넌트 문서화 가이드

## 문서화 구조

### 1. 아이디어 구체화 섹션

각 컴포넌트 문서의 시작 부분에 다음 구조로 아이디어를 구체화해야 합니다:

```tsx
{
  /* 아이디어 구체화 섹션 - 새로운 디자인 */
}
<section className="mb-8">
  <div className="flex items-start space-x-4">
    {/* 번호 아이콘 */}
    <div className="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full border border-white flex items-center justify-center">
      <span className="text-white font-bold text-sm">1</span>
    </div>

    {/* 내용 */}
    <div className="flex-1">
      <h2 className="text-xl font-bold text-white mb-4">아이디어 구체화</h2>

      <div className="space-y-3 pl-4 border-l border-gray-600">
        <div className="flex items-start space-x-3">
          <span className="text-gray-400 text-sm font-medium min-w-[60px]">언제:</span>
          <span className="text-gray-300 text-sm">[이벤트 발생 조건]</span>
        </div>

        <div className="flex items-start space-x-3">
          <span className="text-gray-400 text-sm font-medium min-w-[60px]">무엇을:</span>
          <span className="text-gray-300 text-sm">[대상 요소]</span>
        </div>

        <div className="flex items-start space-x-3">
          <span className="text-gray-400 text-sm font-medium min-w-[60px]">어떻게:</span>
          <span className="text-gray-300 text-sm">[애니메이션 방식]</span>
        </div>
      </div>
    </div>
  </div>
</section>;
```

### 2. 기본 프롬프트 섹션

```tsx
{
  /* 기본 프롬프트 섹션 */
}
<section className="mb-8">
  <div className="flex items-start space-x-4">
    {/* 번호 아이콘 */}
    <div className="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full border border-white flex items-center justify-center">
      <span className="text-white font-bold text-sm">2</span>
    </div>

    {/* 내용 */}
    <div className="flex-1">
      <h2 className="text-xl font-bold text-white mb-4">기본 프롬프트</h2>

      <div className="pl-4 border-l border-gray-600">
        <p className="text-gray-300 text-sm leading-relaxed">
          [컴포넌트명] 컴포넌트를 만들어주세요. 이 컴포넌트는 [주요 기능 설명]을 보여줍니다. [prop 설명]을 설정할 수
          있게 해주세요.
        </p>
      </div>
    </div>
  </div>
</section>;
```

### 3. 코드블럭 삽입 규칙

#### 기본 코드블럭 구조

````markdown
## 📝 코드 예시

### 기본 사용법

```tsx
// 컴포넌트 기본 사용 예시
```
````

### 고급 설정

```tsx
// 커스터마이징된 설정 예시
```

### Props 인터페이스

```tsx
// TypeScript 인터페이스 정의
```

### 스타일링 가이드

```css
/* 관련 CSS 스타일 */
```

````

#### 코드블럭 작성 규칙

1. **언어 태그 필수**: 모든 코드블럭에 적절한 언어 태그를 사용

   - TypeScript/React: `tsx`
   - JavaScript: `js`
   - CSS: `css`
   - JSON: `json`

2. **주석 포함**: 복잡한 코드에는 설명 주석을 포함
   ```tsx
   // 이 부분은 스크롤 이벤트를 처리합니다
   const handleScroll = () => {
     // 스크롤 위치에 따른 애니메이션 계산
   };
````

3. **실행 가능한 예시**: 모든 코드 예시는 실제로 실행 가능해야 함

4. **단계별 설명**: 복잡한 컴포넌트는 단계별로 나누어 설명

   ````markdown
   ### 1단계: 기본 구조 설정

   ```tsx
   // 기본 구조 코드
   ```
   ````

   ### 2단계: 애니메이션 로직 추가

   ```tsx
   // 애니메이션 로직 코드
   ```

   ### 3단계: 인터랙션 연결

   ```tsx
   // 인터랙션 코드
   ```

   ```

   ```

### 4. 문서화 체크리스트

각 컴포넌트 문서 작성 시 다음 항목들을 확인해야 합니다:

- [ ] 아이디어 구체화 섹션 포함
- [ ] 기본 프롬프트 섹션 포함
- [ ] 기본 사용법 코드블럭 포함
- [ ] Props 인터페이스 정의
- [ ] 고급 설정 예시 포함
- [ ] 실제 동작 데모 포함
- [ ] 성능 고려사항 언급
- [ ] 브라우저 호환성 정보
- [ ] 관련 링크나 참고자료

### 5. 파일 구조 규칙

```
src/app/docs/[category]/[component]/
├── page.tsx          # 메인 문서 페이지
├── constants/
│   └── index.ts      # 상수 및 설정값
└── README.md         # 추가 설명 (선택사항)
```

### 6. 코드 예시 작성 가이드

#### 컴포넌트 사용 예시

```tsx
import { ComponentName } from "@/components/common/framer-motion/ComponentName";

export default function Example() {
  return <ComponentName prop1="value1" prop2={42} prop3={true} />;
}
```

#### Props 인터페이스

```tsx
export interface ComponentNameProps {
  prop1: string;
  prop2?: number;
  prop3?: boolean;
  className?: string;
}
```

#### 상수 정의

```tsx
export const COMPONENT_DEFAULTS = {
  prop1: "default",
  prop2: 100,
  prop3: false,
};

export const PROP_OPTIONS = [
  { value: "option1", label: "Option 1" },
  { value: "option2", label: "Option 2" },
];
```

### 7. 문서화 품질 기준

- **명확성**: 초보자도 이해할 수 있는 설명
- **완성도**: 실행 가능한 전체 예시 제공
- **실용성**: 실제 프로젝트에서 바로 사용 가능
- **일관성**: 다른 문서와 동일한 구조와 스타일
- **최신성**: 최신 라이브러리 버전과 호환되는 코드

### 8. 디자인 시스템

#### 색상 팔레트

- **번호 아이콘**: `bg-blue-500` + `border-white`
- **텍스트**: `text-white` (제목), `text-gray-300` (본문), `text-gray-400` (라벨)
- **구분선**: `border-gray-600`

#### 레이아웃

- **수평 정렬**: `flex items-start space-x-4`
- **세로 구분선**: `border-l border-gray-600`
- **여백**: `pl-4` (왼쪽 패딩)

#### 타이포그래피

- **제목**: `text-xl font-bold`
- **라벨**: `text-sm font-medium min-w-[60px]`
- **본문**: `text-sm leading-relaxed`
